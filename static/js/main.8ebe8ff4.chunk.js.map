{"version":3,"sources":["components/ContactListItem/ContactsListItem.module.css","components/ContactFilter/ContactFilter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/ContactListItem/ContactListItem.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["module","exports","Form","props","state","name","number","handleInput","bind","handleSubmit","this","setState","e","currentTarget","value","preventDefault","id","shortid","generate","onSubmit","resetInput","className","s","form","contactFormLabel","contactFormInput","onChange","type","pattern","title","required","contactAddButton","Component","ContactsList","children","ContactsListItem","contacts","map","contact","contactListItem","contactListName","contactListNumber","Filter","filter","reset","filterLabel","filterInput","placeholder","onBlur","App","addNewContact","newContact","lowLettersNames","toLocaleLowerCase","filtered","includes","contactSection","onFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ebe8ff4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactsListItem_contactListItem__1hPCb\",\"contactListName\":\"ContactsListItem_contactListName__D8sfv\",\"contactListNumber\":\"ContactsListItem_contactListNumber__2mAxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"ContactFilter_filterLabel__2vSXp\",\"filterInput\":\"ContactFilter_filterInput__EkwjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactSection\":\"App_contactSection__rf2CP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__tyCc4\",\"contactFormLabel\":\"ContactForm_contactFormLabel__3AkOO\",\"contactFormInput\":\"ContactForm_contactFormInput__3mxOW\",\"contactAddButton\":\"ContactForm_contactAddButton__KQNTb\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      number: '',\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  resetInput() {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n  handleInput(e) {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const id = shortid.generate();\r\n    this.props.onSubmit(name, number, id);\r\n    this.resetInput();\r\n  }\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.contactFormLabel}>\r\n          Name\r\n          <input\r\n            className={s.contactFormInput}\r\n            onChange={this.handleInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.contactFormLabel}>\r\n          Phone\r\n          <input\r\n            className={s.contactFormInput}\r\n            onChange={this.handleInput}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.contactAddButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","const ContactsList = ({ children }) => {\r\n  return (\r\n    <>\r\n      <h3>Contacts</h3>\r\n      <ul className=\"contact-list\">{children}</ul>\r\n    </>\r\n  );\r\n};\r\nexport default ContactsList;\r\n","import shortid from 'shortid';\r\nimport s from './ContactsListItem.module.css';\r\nconst ContactsListItem = ({ contacts }) => {\r\n  return contacts.map(contact => (\r\n    <li className={s.contactListItem} key={shortid.generate()}>\r\n      <p className={s.contactListName}>{contact.name}</p>\r\n      <p className={s.contactListNumber}>{contact.number}</p>\r\n    </li>\r\n  ));\r\n};\r\nexport default ContactsListItem;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactFilter.module.css';\r\n\r\nconst Filter = ({ filter, handleInput, reset }) => {\r\n  return (\r\n    <label className={s.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        placeholder=\"Input contact name\"\r\n        onBlur={reset}\r\n        onChange={handleInput}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport s from './App.module.css';\nimport shortid from 'shortid';\n\nimport Form from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport ContactsListItem from './components/ContactListItem/ContactListItem';\nimport Filter from './components/ContactFilter/ContactFilter';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      ],\n\n      filter: '',\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.resetInput = this.resetInput.bind(this);\n    this.addNewContact = this.addNewContact.bind(this);\n  }\n\n  handleInput(e) {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  }\n  resetInput() {\n    this.setState({ filter: '' });\n  }\n  addNewContact(name, number, id) {\n    const newContact = { name, number, id };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  }\n\n  render() {\n    const lowLettersNames = this.state.filter.toLocaleLowerCase();\n\n    const filtered = this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(lowLettersNames),\n    );\n    return (\n      <div className={s.contactSection}>\n        <h1>Phonebook</h1>\n\n        <Form\n          onSubmit={this.addNewContact}\n          contacts={this.state.contacts}\n          handleSubmit={this.handleSubmit}\n        />\n        <Filter\n          reset={this.resetInput}\n          filter={this.state.filter}\n          onChange={this.onFilter}\n          handleInput={this.handleInput}\n        />\n        <ContactsList>\n          <ContactsListItem contacts={filtered} />\n        </ContactsList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}