{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/ContactListItem/ContactListItem.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["Form","props","state","name","number","handleInput","bind","handleSubmit","this","setState","e","currentTarget","value","preventDefault","id","shortid","generate","onSubmit","resetInput","onChange","type","pattern","title","required","className","Component","ContactsList","children","ContactsListItem","contacts","map","contact","Filter","filter","reset","placeholder","onBlur","App","addNewContact","newContact","lowLettersNames","toLocaleLowerCase","filtered","includes","onFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc68a390.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      number: '',\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  resetInput() {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n  handleInput(e) {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const id = shortid.generate();\r\n    this.props.onSubmit(name, number, id);\r\n    this.resetInput();\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={this.handleInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone\r\n          <input\r\n            onChange={this.handleInput}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","const ContactsList = ({ children }) => {\r\n  return (\r\n    <>\r\n      <h3>Contacts</h3>\r\n      <ul className=\"contact-list\">{children}</ul>\r\n    </>\r\n  );\r\n};\r\nexport default ContactsList;\r\n","import shortid from 'shortid';\r\n\r\nconst ContactsListItem = ({ contacts }) => {\r\n  return contacts.map(contact => (\r\n    <li className=\"contact-list-item\" key={shortid.generate()}>\r\n      <p className=\"contact-list-name\">{contact.name}</p>\r\n      <p className=\"contact-list-number\">{contact.number}</p>\r\n    </li>\r\n  ));\r\n};\r\nexport default ContactsListItem;\r\n","import PropTypes from 'prop-types';\r\nconst Filter = ({ filter, handleInput, reset }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        placeholder=\"Input contact name\"\r\n        onBlur={reset}\r\n        onChange={handleInput}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\n\nimport Form from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport ContactsListItem from './components/ContactListItem/ContactListItem';\nimport Filter from './components/ContactFilter/ContactFilter';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      ],\n\n      filter: '',\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.resetInput = this.resetInput.bind(this);\n    this.addNewContact = this.addNewContact.bind(this);\n  }\n\n  handleInput(e) {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  }\n  resetInput() {\n    this.setState({ filter: '' });\n  }\n  addNewContact(name, number, id) {\n    const newContact = { name, number, id };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  }\n\n  render() {\n    const lowLettersNames = this.state.filter.toLocaleLowerCase();\n\n    const filtered = this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(lowLettersNames),\n    );\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <Form\n          onSubmit={this.addNewContact}\n          contacts={this.state.contacts}\n          handleSubmit={this.handleSubmit}\n        />\n        <Filter\n          reset={this.resetInput}\n          filter={this.state.filter}\n          onChange={this.onFilter}\n          handleInput={this.handleInput}\n        />\n        <ContactsList>\n          <ContactsListItem contacts={filtered} />\n        </ContactsList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}